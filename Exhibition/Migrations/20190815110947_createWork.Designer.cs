// <auto-generated />
using Exhibition.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Exhibition.Migrations
{
    [DbContext(typeof(WorkContext))]
    [Migration("20190815110947_createWork")]
    partial class createWork
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.11-servicing-32099");

            modelBuilder.Entity("Exhibition.Models.ImgOrVideo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Discribe");

                    b.Property<string>("Src");

                    b.Property<int>("wId");

                    b.HasKey("Id");

                    b.HasIndex("wId");

                    b.ToTable("imgs");
                });

            modelBuilder.Entity("Exhibition.Models.Project", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Discribe");

                    b.Property<string>("pName");

                    b.HasKey("Id");

                    b.ToTable("projects");
                });

            modelBuilder.Entity("Exhibition.Models.WorkItem", b =>
                {
                    b.Property<int>("wId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Discribe");

                    b.Property<int>("projId");

                    b.Property<string>("wName");

                    b.HasKey("wId");

                    b.HasIndex("projId");

                    b.ToTable("works");
                });

            modelBuilder.Entity("Exhibition.Models.ImgOrVideo", b =>
                {
                    b.HasOne("Exhibition.Models.WorkItem")
                        .WithMany("imgs")
                        .HasForeignKey("wId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Exhibition.Models.WorkItem", b =>
                {
                    b.HasOne("Exhibition.Models.Project", "proj")
                        .WithMany()
                        .HasForeignKey("projId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
